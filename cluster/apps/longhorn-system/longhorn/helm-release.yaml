---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: longhorn
  namespace: longhorn-system
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.longhorn.io
      chart: longhorn
      version: 1.2.4
      sourceRef:
        kind: HelmRepository
        name: longhorn-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      longhorn:
        engine:
          repository: longhornio/longhorn-engine
          tag: v1.2.0
        manager:
          repository: longhornio/longhorn-manager
          tag: v1.2.0
        ui:
          repository: longhornio/longhorn-ui
          tag: v1.2.0
        instanceManager:
          repository: longhornio/longhorn-instance-manager
          tag: v1_20210731
        shareManager:
          repository: longhornio/longhorn-share-manager
          tag: v1_20210820
        backingImageManager:
          repository: longhornio/backing-image-manager
          tag: v2_20210820
      csi:
        attacher:
          repository: k8s.gcr.io/sig-storage/csi-attacher
          tag: v3.2.1
        provisioner:
          repository: k8s.gcr.io/sig-storage/csi-provisioner
          tag: v2.1.2
        nodeDriverRegistrar:
          repository: k8s.gcr.io/sig-storage/csi-node-driver-registrar
          tag: v2.3.0
        resizer:
          repository: k8s.gcr.io/sig-storage/csi-resizer
          tag: v1.2.0
        snapshotter:
          repository: k8s.gcr.io/sig-storage/csi-snapshotter
          tag: v3.0.3
      pullPolicy: IfNotPresent

    ingress:
      ## Set to true to enable ingress record generation
      enabled: true

      host: "longhorn.${SECRET_DOMAIN}"

      ## Set this to true in order to enable TLS on the ingress record
      ## A side effect of this will be that the backend service will be connected at port 443
      tls: true

      ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
      tlsSecret: longhorn.local-tls

      ## Ingress annotations done as key:value pairs
      ## If you're using kube-lego, you will want to add:
      ## kubernetes.io/tls-acme: true
      ##
      ## For a full list of possible ingress annotations, please see
      ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/annotations.md
      ##
      ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
      annotations:
        kubernetes.io/ingress.class: nginx
