---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.bitnami.com/bitnami
      chart: thanos
      version: 10.4.0
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: kube-prometheus-stack
      namespace: monitoring
  values:
    objstoreConfig:
      type: s3
      config:
        insecure: true
    query:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      replicaLabels:
        - replica
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        ingressClassName: "traefik"
        hostname: "thanos.${SECRET_DOMAIN}"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        tls: true
    existingObjstoreSecret: thanos-objstore
    queryFrontend:
      enabled: false
    bucketweb:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
    compactor:
      enabled: true
      retentionResolutionRaw: 14d
      retentionResolution5m: 30d
      retentionResolution1h: 180d
      persistence:
        enabled: true
        size: 5Gi
    storegateway:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      persistence:
        enabled: true
        size: 1Gi
    ruler:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      dnsDiscovery:
        enabled: true
      alertmanagers:
        - http://kube-prometheus-stack-alertmanager.monitoring:9093
      clusterName: homelab
      extraFlags:
        - "--web.prefix-header=X-Forwarded-Prefix"
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      persistence:
        enabled: true
        size: 1Gi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
